#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Configureation file for the regression CNN
"""
import os
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'
import tensorflow.python.util.deprecation as deprecation
deprecation._PRINT_DEPRECATION_WARNINGS = False
import tensorflow as tf
from generate import load_data
from tools import preprocess, r2_score


###############################################################################
# Set up the data
###############################################################################

type = "regression"

path = "../data/"
filename = "maps_(100, 28, 28, 20)_0.008_0.0_0.0_10.0_1.0e+00_True_.npy"
data_file = path+filename
slice = None

#maps, labels, stats = load_data(file=data_file, slice=slice)

from generate import multiple_load_data
maps, labels, stats = multiple_load_data(data_file, slice, 10)


(X_train, y_train), (X_test, y_test) = preprocess(maps, labels,
                                                train_size = 0.8,
                                                regress=True,
                                                scale=True,
                                                seed=42,
                                                shuffle=True)

###############################################################################
# for create_model()
###############################################################################

input_shape = (28, 28, 20)     # Shape of the images, holds the raw pixel values

n_filters = 16                  # For the first Conv2D layer
kernel_size = (5,5)
layer_config = [32, 64]         # (layer1, layer2, layer3, ....)

connected_neurons = 128         # For the first Dense layer
n_categories = 1                # For the last Dense layer

input_activation  = "relu"
hidden_activation = "relu"
output_activation = "sigmoid"

reg = None  #tf.keras.regularizers.l2(l=0.1)

###############################################################################
# for train_model()
###############################################################################

model_dir = "tmp/"           # Where to save the model

epochs = 20
batch_size = 10

opt = tf.keras.optimizers.Adam(learning_rate=1e-3)

early_stop = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=30)

loss = "mean_squared_error"
metrics = [r2_score]

(ML) alida ~/Documents/uio/Master/FYS-STK4155/project3/code master(*&?) $ python CNN.py -rn reg10true1
________________________________________________________________

Analysis: regression
Save as:  reg10true1
________________________________________________________________

Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #
=================================================================
conv2d (Conv2D)              (None, 28, 28, 16)        8016
_________________________________________________________________
max_pooling2d (MaxPooling2D) (None, 14, 14, 16)        0
_________________________________________________________________
conv2d_1 (Conv2D)            (None, 14, 14, 32)        12832
_________________________________________________________________
max_pooling2d_1 (MaxPooling2 (None, 7, 7, 32)          0
_________________________________________________________________
conv2d_2 (Conv2D)            (None, 7, 7, 64)          51264
_________________________________________________________________
max_pooling2d_2 (MaxPooling2 (None, 3, 3, 64)          0
_________________________________________________________________
flatten (Flatten)            (None, 576)               0
_________________________________________________________________
dense (Dense)                (None, 128)               73856
_________________________________________________________________
dense_1 (Dense)              (None, 1)                 129
=================================================================
Total params: 146,097
Trainable params: 146,097
Non-trainable params: 0
_________________________________________________________________

training: 640 - validation: 160 - Untrained, r2_score: -13.78%
_________________________________________________________________

Epoch 1/20
52/52 [==============================] - 3s 60ms/step - loss: 0.0748 - r2_score: -0.2742 - val_loss: 0.0812 - val_r2_score: -0.0756
Epoch 2/20
52/52 [==============================] - 3s 50ms/step - loss: 0.0720 - r2_score: -0.1223 - val_loss: 0.0821 - val_r2_score: -0.0870
Epoch 3/20
52/52 [==============================] - 4s 83ms/step - loss: 0.0720 - r2_score: -0.2012 - val_loss: 0.0809 - val_r2_score: -0.0715
Epoch 4/20
52/52 [==============================] - 3s 51ms/step - loss: 0.0718 - r2_score: -1.1737 - val_loss: 0.0807 - val_r2_score: -0.0688
Epoch 5/20
52/52 [==============================] - 3s 62ms/step - loss: 0.0719 - r2_score: -5.4478 - val_loss: 0.0832 - val_r2_score: -0.1016
Epoch 6/20
52/52 [==============================] - 4s 76ms/step - loss: 0.0715 - r2_score: -0.1671 - val_loss: 0.0815 - val_r2_score: -0.0794
Epoch 7/20
52/52 [==============================] - 4s 74ms/step - loss: 0.0717 - r2_score: -0.4690 - val_loss: 0.0815 - val_r2_score: -0.0790
Epoch 8/20
52/52 [==============================] - 3s 53ms/step - loss: 0.0717 - r2_score: -0.1309 - val_loss: 0.0826 - val_r2_score: -0.0943
Epoch 9/20
52/52 [==============================] - 3s 51ms/step - loss: 0.0716 - r2_score: -0.2094 - val_loss: 0.0820 - val_r2_score: -0.0857
Epoch 10/20
52/52 [==============================] - 3s 62ms/step - loss: 0.0716 - r2_score: -0.1352 - val_loss: 0.0822 - val_r2_score: -0.0886
Epoch 11/20
52/52 [==============================] - 3s 51ms/step - loss: 0.0718 - r2_score: -0.3893 - val_loss: 0.0814 - val_r2_score: -0.0778
Epoch 12/20
52/52 [==============================] - 3s 57ms/step - loss: 0.0715 - r2_score: -0.5324 - val_loss: 0.0822 - val_r2_score: -0.0886
Epoch 13/20
52/52 [==============================] - 3s 58ms/step - loss: 0.0716 - r2_score: -0.1479 - val_loss: 0.0816 - val_r2_score: -0.0806
Epoch 14/20
52/52 [==============================] - 3s 58ms/step - loss: 0.0718 - r2_score: -0.7394 - val_loss: 0.0803 - val_r2_score: -0.0633
Epoch 15/20
52/52 [==============================] - 3s 54ms/step - loss: 0.0716 - r2_score: -0.1369 - val_loss: 0.0820 - val_r2_score: -0.0856
Epoch 16/20
52/52 [==============================] - 3s 53ms/step - loss: 0.0717 - r2_score: -0.2104 - val_loss: 0.0830 - val_r2_score: -0.0991
Epoch 17/20
52/52 [==============================] - 3s 64ms/step - loss: 0.0716 - r2_score: -0.1065 - val_loss: 0.0818 - val_r2_score: -0.0834
Epoch 18/20
52/52 [==============================] - 3s 56ms/step - loss: 0.0716 - r2_score: -0.3659 - val_loss: 0.0819 - val_r2_score: -0.0841
Epoch 19/20
52/52 [==============================] - 3s 49ms/step - loss: 0.0716 - r2_score: -0.1747 - val_loss: 0.0826 - val_r2_score: -0.0943
Epoch 20/20
52/52 [==============================] - 2s 48ms/step - loss: 0.0716 - r2_score: -0.1289 - val_loss: 0.0825 - val_r2_score: -0.0926
_________________________________________________________________

r2_score: -51.39%
_________________________________________________________________



###############################################################################
# for train_model()
###############################################################################

model_dir = "tmp/"           # Where to save the model

epochs = 20
batch_size = 10

opt = tf.keras.optimizers.Adam(learning_rate=1e-5)

early_stop = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=30)

loss = "mean_squared_error"
metrics = [r2_score]


(ML) alida ~/Documents/uio/Master/FYS-STK4155/project3/code master(*&?) $ python CNN.py -rn reg10true1 -e

Resuming training on: reg10true1
________________________________________________________________

Analysis: regression
Save as:  reg10true1
________________________________________________________________

Epoch 1/20
64/64 [==============================] - 4s 65ms/step - loss: 0.0732 - r2_score: -0.1809 - val_loss: 0.0702 - val_r2_score: -0.1164
Epoch 2/20
64/64 [==============================] - 4s 57ms/step - loss: 0.0732 - r2_score: -0.1587 - val_loss: 0.0704 - val_r2_score: -0.1209
Epoch 3/20
64/64 [==============================] - 4s 62ms/step - loss: 0.0732 - r2_score: -0.1090 - val_loss: 0.0702 - val_r2_score: -0.1148
Epoch 4/20
64/64 [==============================] - 4s 58ms/step - loss: 0.0732 - r2_score: -0.1696 - val_loss: 0.0702 - val_r2_score: -0.1169
Epoch 5/20
64/64 [==============================] - 4s 57ms/step - loss: 0.0732 - r2_score: -0.1535 - val_loss: 0.0702 - val_r2_score: -0.1154
Epoch 6/20
64/64 [==============================] - 4s 60ms/step - loss: 0.0732 - r2_score: -0.1168 - val_loss: 0.0702 - val_r2_score: -0.1150
Epoch 7/20
64/64 [==============================] - 4s 63ms/step - loss: 0.0732 - r2_score: -0.1230 - val_loss: 0.0703 - val_r2_score: -0.1191
Epoch 8/20
64/64 [==============================] - 5s 70ms/step - loss: 0.0733 - r2_score: -0.1396 - val_loss: 0.0703 - val_r2_score: -0.1188
Epoch 9/20
64/64 [==============================] - 3s 53ms/step - loss: 0.0732 - r2_score: -0.1530 - val_loss: 0.0704 - val_r2_score: -0.1211
Epoch 10/20
64/64 [==============================] - 4s 58ms/step - loss: 0.0732 - r2_score: -0.1606 - val_loss: 0.0703 - val_r2_score: -0.1184
Epoch 11/20
64/64 [==============================] - 4s 59ms/step - loss: 0.0733 - r2_score: -0.1677 - val_loss: 0.0703 - val_r2_score: -0.1188
Epoch 12/20
64/64 [==============================] - 4s 57ms/step - loss: 0.0733 - r2_score: -0.2024 - val_loss: 0.0703 - val_r2_score: -0.1190
Epoch 13/20
64/64 [==============================] - 3s 54ms/step - loss: 0.0733 - r2_score: -0.1417 - val_loss: 0.0703 - val_r2_score: -0.1185
Epoch 14/20
64/64 [==============================] - 4s 59ms/step - loss: 0.0733 - r2_score: -0.1965 - val_loss: 0.0703 - val_r2_score: -0.1188
Epoch 15/20
64/64 [==============================] - 4s 61ms/step - loss: 0.0732 - r2_score: -0.0693 - val_loss: 0.0701 - val_r2_score: -0.1136
Epoch 16/20
64/64 [==============================] - 4s 60ms/step - loss: 0.0733 - r2_score: -0.1506 - val_loss: 0.0703 - val_r2_score: -0.1177
Epoch 17/20
64/64 [==============================] - 5s 71ms/step - loss: 0.0732 - r2_score: -0.2561 - val_loss: 0.0702 - val_r2_score: -0.1155
Epoch 18/20
64/64 [==============================] - 4s 66ms/step - loss: 0.0732 - r2_score: -0.1374 - val_loss: 0.0702 - val_r2_score: -0.1155
Epoch 19/20
64/64 [==============================] - 4s 60ms/step - loss: 0.0732 - r2_score: -0.1184 - val_loss: 0.0702 - val_r2_score: -0.1173
Epoch 20/20
64/64 [==============================] - 4s 57ms/step - loss: 0.0732 - r2_score: -0.1321 - val_loss: 0.0702 - val_r2_score: -0.1170
_________________________________________________________________

r2_score: -47.85%
_________________________________________________________________


###############################################################################
# for train_model()
###############################################################################

model_dir = "tmp/"           # Where to save the model

epochs = 20
batch_size = 10

opt = tf.keras.optimizers.Adam(learning_rate=1e-10)

early_stop = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=30)

loss = "mean_squared_error"
metrics = [r2_score]


(ML) alida ~/Documents/uio/Master/FYS-STK4155/project3/code master(*&?) $ python CNN.py -rn reg10true1 -e

Resuming training on: reg10true1
________________________________________________________________

Analysis: regression
Save as:  reg10true1
________________________________________________________________

Epoch 1/20
64/64 [==============================] - 4s 58ms/step - loss: 0.0725 - r2_score: -0.1341 - val_loss: 0.0735 - val_r2_score: -0.0895
Epoch 2/20
64/64 [==============================] - 3s 52ms/step - loss: 0.0724 - r2_score: -0.4629 - val_loss: 0.0736 - val_r2_score: -0.0897
Epoch 3/20
64/64 [==============================] - 4s 58ms/step - loss: 0.0723 - r2_score: -0.1279 - val_loss: 0.0738 - val_r2_score: -0.0920
Epoch 4/20
64/64 [==============================] - 4s 56ms/step - loss: 0.0723 - r2_score: -0.1289 - val_loss: 0.0737 - val_r2_score: -0.0908
Epoch 5/20
64/64 [==============================] - 4s 63ms/step - loss: 0.0725 - r2_score: -0.2339 - val_loss: 0.0736 - val_r2_score: -0.0900
Epoch 6/20
64/64 [==============================] - 4s 59ms/step - loss: 0.0723 - r2_score: -0.1366 - val_loss: 0.0737 - val_r2_score: -0.0905
Epoch 7/20
64/64 [==============================] - 4s 56ms/step - loss: 0.0724 - r2_score: -0.1822 - val_loss: 0.0737 - val_r2_score: -0.0909
Epoch 8/20
64/64 [==============================] - 4s 55ms/step - loss: 0.0724 - r2_score: -0.1392 - val_loss: 0.0738 - val_r2_score: -0.0913
Epoch 9/20
64/64 [==============================] - 6s 91ms/step - loss: 0.0724 - r2_score: -0.2296 - val_loss: 0.0739 - val_r2_score: -0.0926
Epoch 10/20
64/64 [==============================] - 5s 79ms/step - loss: 0.0725 - r2_score: -0.3422 - val_loss: 0.0738 - val_r2_score: -0.0917
Epoch 11/20
64/64 [==============================] - 3s 52ms/step - loss: 0.0724 - r2_score: -0.1107 - val_loss: 0.0737 - val_r2_score: -0.0908
Epoch 12/20
64/64 [==============================] - 5s 78ms/step - loss: 0.0725 - r2_score: -0.2249 - val_loss: 0.0735 - val_r2_score: -0.0894
Epoch 13/20
64/64 [==============================] - 4s 68ms/step - loss: 0.0724 - r2_score: -0.1055 - val_loss: 0.0737 - val_r2_score: -0.0904
Epoch 14/20
64/64 [==============================] - 4s 61ms/step - loss: 0.0724 - r2_score: -0.2745 - val_loss: 0.0736 - val_r2_score: -0.0902
Epoch 15/20
64/64 [==============================] - 3s 54ms/step - loss: 0.0724 - r2_score: -0.1097 - val_loss: 0.0737 - val_r2_score: -0.0909
Epoch 16/20
64/64 [==============================] - 5s 71ms/step - loss: 0.0724 - r2_score: -0.2217 - val_loss: 0.0737 - val_r2_score: -0.0905
Epoch 17/20
64/64 [==============================] - 5s 81ms/step - loss: 0.0724 - r2_score: -0.1127 - val_loss: 0.0736 - val_r2_score: -0.0903
Epoch 18/20
64/64 [==============================] - 5s 76ms/step - loss: 0.0724 - r2_score: -0.1910 - val_loss: 0.0737 - val_r2_score: -0.0906
Epoch 19/20
64/64 [==============================] - 4s 60ms/step - loss: 0.0724 - r2_score: -0.1471 - val_loss: 0.0737 - val_r2_score: -0.0910
Epoch 20/20
64/64 [==============================] - 5s 83ms/step - loss: 0.0725 - r2_score: -0.3054 - val_loss: 0.0736 - val_r2_score: -0.0900
_________________________________________________________________

r2_score: -50.63%
_________________________________________________________________
