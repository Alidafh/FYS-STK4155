###############################################################################
# Set up the data
###############################################################################

type = "regression"

path = "../data/"
filename = "maps_(100, 28, 28, 20)_0.008_0.0_0.0_10.0_1.0e+00_True_.npy"
data_file = path+filename
slice = None

#maps, labels, stats = load_data(file=data_file, slice=slice)

from generate import multiple_load_data
maps, labels, stats = multiple_load_data(data_file, slice, 10)


(X_train, y_train), (X_test, y_test) = preprocess(maps, labels,
                                                train_size = 0.8,
                                                regress=True,
                                                scale=True,
                                                seed=42,
                                                shuffle=True)

###############################################################################
# for create_model()
###############################################################################

input_shape = (28, 28, 20)     # Shape of the images, holds the raw pixel values

n_filters = 64                  # For the first Conv2D layer
kernel_size = (5,5)
layer_config = [128, 256]         # (layer1, layer2, layer3, ....)

connected_neurons = 512         # For the first Dense layer
n_categories = 1                # For the last Dense layer

input_activation  = "relu"
hidden_activation = "relu"
output_activation = "sigmoid"

reg = None  #tf.keras.regularizers.l2(l=0.1)

###############################################################################
# for train_model()
###############################################################################

model_dir = "tmp/"           # Where to save the model

epochs = 50
batch_size = 10

opt = tf.keras.optimizers.Adam(learning_rate=1e-4)

early_stop = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=30)

loss = "mean_squared_error"
metrics = [r2_score]



(ML) alida ~/Documents/uio/Master/FYS-STK4155/project3/code master(*&?) $ python CNN.py -rn reg10true2
________________________________________________________________

Analysis: regression
Save as:  reg10true2
________________________________________________________________

Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #
=================================================================
conv2d (Conv2D)              (None, 28, 28, 64)        32064
_________________________________________________________________
max_pooling2d (MaxPooling2D) (None, 14, 14, 64)        0
_________________________________________________________________
conv2d_1 (Conv2D)            (None, 14, 14, 128)       204928
_________________________________________________________________
max_pooling2d_1 (MaxPooling2 (None, 7, 7, 128)         0
_________________________________________________________________
conv2d_2 (Conv2D)            (None, 7, 7, 256)         819456
_________________________________________________________________
max_pooling2d_2 (MaxPooling2 (None, 3, 3, 256)         0
_________________________________________________________________
flatten (Flatten)            (None, 2304)              0
_________________________________________________________________
dense (Dense)                (None, 512)               1180160
_________________________________________________________________
dense_1 (Dense)              (None, 1)                 513
=================================================================
Total params: 2,237,121
Trainable params: 2,237,121
Non-trainable params: 0
_________________________________________________________________

training: 640 - validation: 160 - Untrained, r2_score: -5.18%
_________________________________________________________________

Epoch 1/50
52/52 [==============================] - 22s 432ms/step - loss: 0.0746 - r2_score: -0.0932 - val_loss: 0.0745 - val_r2_score: -0.1123
Epoch 2/50
52/52 [==============================] - 17s 336ms/step - loss: 0.0745 - r2_score: -0.1202 - val_loss: 0.0765 - val_r2_score: -0.1459
Epoch 3/50
52/52 [==============================] - 18s 345ms/step - loss: 0.0741 - r2_score: -0.1014 - val_loss: 0.0760 - val_r2_score: -0.1370
Epoch 4/50
52/52 [==============================] - 17s 336ms/step - loss: 0.0745 - r2_score: -0.3009 - val_loss: 0.0766 - val_r2_score: -0.1464
Epoch 5/50
52/52 [==============================] - 17s 336ms/step - loss: 0.0758 - r2_score: -0.6707 - val_loss: 0.0746 - val_r2_score: -0.1133
Epoch 6/50
52/52 [==============================] - 18s 343ms/step - loss: 0.0738 - r2_score: -0.1609 - val_loss: 0.0821 - val_r2_score: -0.2359
Epoch 7/50
52/52 [==============================] - 17s 336ms/step - loss: 0.0750 - r2_score: -0.2849 - val_loss: 0.0745 - val_r2_score: -0.1123
Epoch 8/50
52/52 [==============================] - 18s 338ms/step - loss: 0.0747 - r2_score: -0.2521 - val_loss: 0.0771 - val_r2_score: -0.1551
Epoch 9/50
52/52 [==============================] - 18s 337ms/step - loss: 0.0742 - r2_score: -0.2635 - val_loss: 0.0767 - val_r2_score: -0.1486
Epoch 10/50
52/52 [==============================] - 19s 365ms/step - loss: 0.0748 - r2_score: -0.7722 - val_loss: 0.0746 - val_r2_score: -0.1127
Epoch 11/50
52/52 [==============================] - 18s 344ms/step - loss: 0.0747 - r2_score: -0.1707 - val_loss: 0.0747 - val_r2_score: -0.1153
Epoch 12/50
52/52 [==============================] - 18s 341ms/step - loss: 0.0743 - r2_score: -0.5625 - val_loss: 0.0763 - val_r2_score: -0.1425
Epoch 13/50
52/52 [==============================] - 18s 339ms/step - loss: 0.0745 - r2_score: -0.1731 - val_loss: 0.0747 - val_r2_score: -0.1158
Epoch 14/50
52/52 [==============================] - 17s 332ms/step - loss: 0.0742 - r2_score: -0.2701 - val_loss: 0.0764 - val_r2_score: -0.1434
Epoch 15/50
52/52 [==============================] - 17s 331ms/step - loss: 0.0740 - r2_score: -0.1449 - val_loss: 0.0755 - val_r2_score: -0.1294
Epoch 16/50
52/52 [==============================] - 17s 331ms/step - loss: 0.0745 - r2_score: -0.3207 - val_loss: 0.0755 - val_r2_score: -0.1283
Epoch 17/50
52/52 [==============================] - 18s 346ms/step - loss: 0.0741 - r2_score: -0.2525 - val_loss: 0.0759 - val_r2_score: -0.1359
Epoch 18/50
52/52 [==============================] - 17s 326ms/step - loss: 0.0739 - r2_score: -0.0797 - val_loss: 0.0752 - val_r2_score: -0.1244
Epoch 19/50
52/52 [==============================] - 17s 333ms/step - loss: 0.0739 - r2_score: -1.6500 - val_loss: 0.0781 - val_r2_score: -0.1706
Epoch 20/50
52/52 [==============================] - 18s 338ms/step - loss: 0.0739 - r2_score: -4.3278 - val_loss: 0.0751 - val_r2_score: -0.1219
Epoch 21/50
52/52 [==============================] - 17s 330ms/step - loss: 0.0744 - r2_score: -0.2154 - val_loss: 0.0751 - val_r2_score: -0.1218
Epoch 22/50
52/52 [==============================] - 17s 326ms/step - loss: 0.0742 - r2_score: -0.2306 - val_loss: 0.0753 - val_r2_score: -0.1260
Epoch 23/50
52/52 [==============================] - 17s 333ms/step - loss: 0.0739 - r2_score: -0.2483 - val_loss: 0.0766 - val_r2_score: -0.1473
Epoch 24/50
52/52 [==============================] - 19s 374ms/step - loss: 0.0739 - r2_score: -0.1296 - val_loss: 0.0754 - val_r2_score: -0.1265
Epoch 25/50
52/52 [==============================] - 21s 398ms/step - loss: 0.0740 - r2_score: -5.1134 - val_loss: 0.0758 - val_r2_score: -0.1339
Epoch 26/50
52/52 [==============================] - 22s 429ms/step - loss: 0.0738 - r2_score: -0.0668 - val_loss: 0.0755 - val_r2_score: -0.1295
Epoch 27/50
52/52 [==============================] - 22s 414ms/step - loss: 0.0741 - r2_score: -0.1375 - val_loss: 0.0759 - val_r2_score: -0.1364
Epoch 28/50
52/52 [==============================] - 22s 414ms/step - loss: 0.0738 - r2_score: -0.3259 - val_loss: 0.0765 - val_r2_score: -0.1465
Epoch 29/50
52/52 [==============================] - 21s 402ms/step - loss: 0.0747 - r2_score: -0.2898 - val_loss: 0.0794 - val_r2_score: -0.1929
Epoch 30/50
52/52 [==============================] - 19s 369ms/step - loss: 0.0751 - r2_score: -0.3719 - val_loss: 0.0753 - val_r2_score: -0.1258
Epoch 31/50
52/52 [==============================] - 20s 376ms/step - loss: 0.0740 - r2_score: -235.2684 - val_loss: 0.0753 - val_r2_score: -0.1247
Epoch 32/50
52/52 [==============================] - 20s 380ms/step - loss: 0.0742 - r2_score: -0.3999 - val_loss: 0.0754 - val_r2_score: -0.1276
Epoch 33/50
52/52 [==============================] - 21s 405ms/step - loss: 0.0740 - r2_score: -0.5024 - val_loss: 0.0751 - val_r2_score: -0.1221
Epoch 34/50
52/52 [==============================] - 21s 404ms/step - loss: 0.0741 - r2_score: -0.2427 - val_loss: 0.0754 - val_r2_score: -0.1278
Epoch 35/50
52/52 [==============================] - 22s 423ms/step - loss: 0.0741 - r2_score: -0.1293 - val_loss: 0.0748 - val_r2_score: -0.1177
Epoch 36/50
52/52 [==============================] - 21s 406ms/step - loss: 0.0741 - r2_score: -0.5313 - val_loss: 0.0754 - val_r2_score: -0.1278
Epoch 37/50
52/52 [==============================] - 21s 411ms/step - loss: 0.0741 - r2_score: -0.1439 - val_loss: 0.0752 - val_r2_score: -0.1240
_________________________________________________________________

r2_score: -46.29%
_________________________________________________________________
